// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccountAssets {
  id               String        @id @default(uuid())
  createdAt        DateTime      @default(now())
  name             String        @unique @db.VarChar(255)
  currency         String
  category         String
  startDate        String
  isActive         Boolean       @default(true)
  deactivationDate String?
  inputAssets      InputAssets[]
}

model AccountLiabilities {
  id               String             @id @default(uuid())
  createdAt        DateTime           @default(now())
  name             String             @unique @db.VarChar(255)
  currency         String
  startDate        String
  principal        Float
  interestRate     Float
  term             Int
  isActive         Boolean            @default(true)
  deactivationDate String?
  inputLiabilities InputLiabilities[]
}

// Rows for this table will be created through a cron job at the beginning of each month
// The user will then be able to update the amount with the actual amount in the account value
model InputAssets {
  id                 String        @id @default(uuid())
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  date               String
  amount             Float
  fxVsUSD            Float
  fxVsEUR            Float
  belongsToAccountId String
  belongsTo          AccountAssets @relation(fields: [belongsToAccountId], references: [id])

  @@unique([date, belongsToAccountId])
}

// Rows for this table will be created through a cron job at the beginning of each month
// User can only manage what get populated on this table by deactivating the related AccountLiability
model InputLiabilities {
  id                 String             @id @default(uuid())
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  date               DateTime
  remainingPrincipal Float
  fxVsUSD            Float
  fxVsEUR            Float
  belongsToAccountId String
  belongsTo          AccountLiabilities @relation(fields: [belongsToAccountId], references: [id])
}
